# Generated by Django 3.2.6 on 2021-10-08 08:38

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Courses',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_name', models.CharField(max_length=50)),
                ('course_category', models.CharField(default='null', max_length=50)),
                ('course_description', models.TextField()),
                ('course_duration', models.PositiveIntegerField(default=0)),
                ('course_contibuted_money', models.PositiveIntegerField(default=0)),
                ('course_author', models.CharField(max_length=50)),
                ('course_price', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('course_published', models.BooleanField(default=False)),
                ('course_no_of_registrations', models.PositiveIntegerField(default=0)),
                ('money_earned_from_course', models.PositiveIntegerField(default=0)),
                ('overall_rating', models.PositiveIntegerField(default=1)),
                ('course_price_for_refugees', models.PositiveIntegerField(default=0)),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-overall_rating', '-created'],
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post_name', models.CharField(max_length=50)),
                ('post_description', models.TextField()),
                ('post_active', models.BooleanField(default=False)),
                ('post_hours', models.PositiveIntegerField(default=0)),
                ('post_total_amount', models.PositiveIntegerField(default=0)),
                ('post_balance_amount', models.PositiveIntegerField(default=0)),
                ('post_email', models.EmailField(max_length=254)),
                ('post_contact_number', models.CharField(blank=True, max_length=10, null=True)),
                ('post_no_of_courses', models.PositiveIntegerField(default=0)),
                ('post_total_contibutors', models.PositiveIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='users',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('Phone_number', models.CharField(blank=True, max_length=10, null=True)),
                ('state', models.CharField(blank=True, max_length=20, null=True)),
                ('city', models.CharField(blank=True, max_length=20, null=True)),
                ('instructor', models.BooleanField(default=False)),
                ('refugee', models.BooleanField(default=False)),
                ('low_income_student', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RefugeeDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('certificate', models.FileField(upload_to='RefugeeCertificates')),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_course_enrolled', models.PositiveIntegerField(default=0)),
                ('earnings', models.PositiveIntegerField(default=0)),
                ('total_course_created', models.PositiveIntegerField(default=0)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MyCourses',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('completion', models.BooleanField(default=False)),
                ('course_rating', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('course_started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(auto_now_add=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Enlighten_Minds.courses')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-course_started_at'],
            },
        ),
        migrations.CreateModel(
            name='Instructor_level',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kind_of_teaching', models.CharField(max_length=50)),
                ('video_pro', models.CharField(max_length=50)),
                ('audience', models.CharField(max_length=50)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Fundraiser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_of_post', models.CharField(max_length=100)),
                ('percentage_shared', models.PositiveIntegerField(default=0)),
                ('name_of_course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Enlighten_Minds.courses')),
            ],
        ),
        migrations.AddField(
            model_name='courses',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
